warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in server.js.
The file will have its original line endings in your working directory
[1mdiff --git a/server.js b/server.js[m
[1mindex b80ab0b..192683d 100644[m
[1m--- a/server.js[m
[1m+++ b/server.js[m
[36m@@ -4,6 +4,9 @@[m [mconst cors = require('cors');[m
 const port = process.env.PORT || 2001;[m
 const mongodb = require('mongodb')[m
 const fileUpload = require('express-fileupload')[m
[32m+[m[32mconst { ObjectID } = require('mongodb')[m
[32m+[m
[32m+[m
 app.use(cors())[m
 app.use(express.json())[m
 app.use(fileUpload());[m
[36m@@ -17,8 +20,6 @@[m [mfunction base64_encode(file) {[m
     }[m
     return file;[m
 }[m
[31m-// ;[m
[31m-[m
 const uri = "mongodb+srv://devAbdulPortfolio:1532002@cluster0.pdnb4.mongodb.net/myFirstDatabase?retryWrites=true&w=majority";[m
 const client = new mongodb.MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });[m
 async function run() {[m
[36m@@ -31,6 +32,7 @@[m [masync function run() {[m
             let projects = req.body;[m
             let files = req.files;[m
             let image = base64_encode(files)[m
[32m+[m[32m            console.log(files)[m
             for (let key in image) {[m
                 projects[key] = image[key][m
             }[m
[36m@@ -48,21 +50,21 @@[m [masync function run() {[m
             res.json(result)[m
         });[m
         app.get('/projects', async (req, res) => {[m
[31m-            // const { items } = req.query[m
[31m-            // let result;[m
[31m-            // if (items) {[m
[31m-            //     result = await projectsCollection.find().sort({ "postDate": -1 }).limit(parseInt(items)).toArray();[m
[31m-            // } else {[m
[31m-            let result = await projectsCollection.find({}).toArray();[m
[31m-            // }[m
[32m+[m[32m            const { items } = req.query[m
[32m+[m[32m            let result;[m
[32m+[m[32m            if (items) {[m
[32m+[m[32m                result = await projectsCollection.find().sort({ "postDate": -1 }).limit(parseInt(items)).toArray();[m
[32m+[m[32m            } else {[m
[32m+[m[32m                let result = await projectsCollection.find({}).toArray();[m
[32m+[m[32m            }[m
             res.json(result)[m
         });[m
[31m-        // app.get('/products/:id', async (req, res) => {[m
[31m-        //     const { id } = req.params[m
[31m-        //     const quary = { _id: ObjectId(id) }[m
[31m-        //     const result = await productCollection.findOne(quary)[m
[31m-        //     res.send(result)[m
[31m-        // });[m
[32m+[m[32m        app.get('/projects/:id', async (req, res) => {[m
[32m+[m[32m            const { id } = req.params[m
[32m+[m[32m            const quary = { _id: ObjectId(id) }[m
[32m+[m[32m            const result = await projectsCollection.findOne(quary)[m
[32m+[m[32m            res.send(result)[m
[32m+[m[32m        });[m
         // app.get('/cart/:id', async (req, res) => {[m
         //     const { id } = req.params[m
         //     const quary = { _id: ObjectId(id) }[m
[36m@@ -131,6 +133,7 @@[m [mrun().catch(console.dir);[m
 app.get('/', (req, res) => {[m
     res.send('Hello Worlds')[m
 })[m
[32m+[m
 app.listen(port, () => {[m
     console.log(port, 'is running');[m
 })[m
\ No newline at end of file[m
